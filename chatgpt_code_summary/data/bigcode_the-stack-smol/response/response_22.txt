This Python code defines a class `Solution` with a method `coinChange` that calculates the minimum number of coins needed to make up a given amount. It uses dynamic programming to iterate through each possible amount and coin denomination to find the optimal solution. The `res` list stores the minimum number of coins needed for each amount. The algorithm iterates through each amount and each coin denomination to update `res` with the minimum number of coins required. If the final result exceeds the given amount, it returns `-1`, otherwise, it returns the minimum number of coins needed for the amount.